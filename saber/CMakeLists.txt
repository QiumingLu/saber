file(GLOB_RECURSE proto_files proto/*.proto)
saber_protobuf_generate_cpp(${proto_gen_folder} proto_srcs proto_hdrs ${proto_files})
set_source_files_properties(${proto_hdrs} ${proto_srcs} PROPERTIES COMPILE_FLAGS "-Wno-conversion -Wno-shorten-64-to-32 -Wno-deprecated-declarations -fPIC")

install(FILES ${proto_gen_folder}/saber.pb.h DESTINATION include/saber/proto)

set(Saber_CLIENT_SRCS ${proto_srcs})
set(Saber_SERVER_SRCS ${proto_srcs})

if (BUILD_CLIENT_LIBS)
  add_subdirectory(client)
endif()
if (BUILD_SERVER_LIBS)
  add_subdirectory(server)
endif()
add_subdirectory(service)
add_subdirectory(util)

if(BUILD_SHARED_LIBS AND BUILD_CLIENT_LIBS)
  add_library(saber_client SHARED ${Saber_CLIENT_SRCS})
  add_library(saber_client_static STATIC ${Saber_CLIENT_SRCS})
  set_target_properties(saber_client_static PROPERTIES OUTPUT_NAME "saber_client")
  set_target_properties(saber_client PROPERTIES CLEAN_DIRECT_OUTPUT ${SABER_VERSION_MAJOR})
  set_target_properties(saber_client_static PROPERTIES CLEAN_DIRECT_OUTPUT ${SABER_VERSION_MAJOR})
  set_target_properties(saber_client PROPERTIES VERSION ${SABER_VERSION_STRING} SOVERSION ${SABER_VERSION_MAJOR})
  target_link_libraries(saber_client ${Saber_LINKER_LIBS})
  install(TARGETS saber_client DESTINATION lib)
  install(TARGETS saber_client_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
elseif(BUILD_CLIENT_LIBS)  
  add_library(saber_client ${Saber_CLIENT_SRCS})
  target_link_libraries(saber_client ${Saber_LINKER_LIBS})
  install(TARGETS saber_client DESTINATION lib)
endif()
  
if(BUILD_SHARED_LIBS AND BUILD_SERVER_LIBS)
  add_library(saber_server SHARED ${Saber_SERVER_SRCS})
  add_library(saber_server_static STATIC ${Saber_SERVER_SRCS})
  set_target_properties(saber_server_static PROPERTIES OUTPUT_NAME "saber_server")
  set_target_properties(saber_server PROPERTIES CLEAN_DIRECT_OUTPUT ${SABER_VERSION_MAJOR})
  set_target_properties(saber_server_static PROPERTIES CLEAN_DIRECT_OUTPUT ${SABER_VERSION_MAJOR})
  set_target_properties(saber_server PROPERTIES VERSION ${SABER_VERSION_STRING} SOVERSION ${SABER_VERSION_MAJOR})
  target_link_libraries(saber_server ${Saber_LINKER_LIBS})
  install(TARGETS saber_server DESTINATION lib)
  install(TARGETS saber_server_static LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
elseif(BUILD_SERVER_LIBS)
  add_library(saber_server ${Saber_SERVER_SRCS})
  target_link_libraries(saber_server ${Saber_LINKER_LIBS})
  install(TARGETS saber_server DESTINATION lib)
endif()

if(BUILD_TESTS)
  add_subdirectory(test)
  add_subdirectory(main)
endif()
